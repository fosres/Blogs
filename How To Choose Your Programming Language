How to Choose Your Programming Language May 26, 2018

Language is Power

What language you use will affect how you think about your code

and design your programs. Think of your language as Tools that

will open the door to learning from the experiences of programmers

who have mastered the types of problems you would like to solve.


So first, before you even begin to choose your programming language.

Ask yourself the tough questions:

What practical, real-life problem do I have a burning white-desire

to solve? Your heart should scream with Absolute Joy over solving

that specific problem--more than solving any other specific

problem.


I can't begin to tell you how many times I set out to solve problems

in game design, cybersecurity, reverse engineering, operating

systems, or you name it, but I did not set out with a definite,

real-life problem to solve--or my heart did not scream with

Absolute Joy over solving that specific problem.


Now, once you figured out what practical problem you want solve,

research the books and people who have done a better job than

you did, in the past, of solving that practical problem.

Admit it. You are not currently the best one. And after all,

the smartest way to become smarter at solving anything is to

follow the example of those smarter than you at solving them.


Before moving on, double check how SATISFIED those experienced

programers were with solving these problems.

Did they feel solving THAT practical problem was CHALLENGING

and MEANINGFUL? This is another tough question to ask yourself.

If yes, those problems may be tough, but they will force you

to grow into a person with meaningful, satisfying careers.


Yes! Aim for the practical problems that will always push

you into a meaningful, satisfying career.


Now, let me repeat:

Have you MADE DEFINITELY CERTAIN that solving this practical

problem will make you grow into having a meaningful, satisfying

career? Great.


This is what is truly more important than simply choosing a

programming language. Its more important than just simply 

choosing to "solve a problem". 


REMEMBER: Without that practical problem you DEFINITELY

want to solve, you will most likely lose the motivation

to master the language that was supposed to OPTIMIZE 

your success in solving the practical problem--IN THE

FIRST PLACE!

Now, that you have made sure you DEFINITELY want to

solve this practical problem--pay attention to the

language those more experienced than you--in solving

the practical problem--used to express their timeless

ideas. Their timeless strategies. Their source code.


If you are still struggling with choosing a programming

language that will be a good fit for you, let me repeat

what I said:

The real reason you choose a programming language is not

simply for what syntax features or even what the language

is technically capable of doing.


You learn a language to COMMUNICATE and LEARN FROM those

more experienced than you in solving a practical, real

life problem.


In real life, people have learned native languages to master a science

(English), or a philosophy (Greek or Latin), for 

business interests (the language of the most powerful

nation of the time), or to improve their spirituality

(the language of sacred texts).


The Bottom Line: You learn a langauge to FOLLOW THOSE

THAT WILL PUSH YOU TO SUCCEED in your long term goals

(The Practical, Real Life Problem you DEFINITELY

strive to solve).


Finally, I believe I have given you the essence of choosing your

language. Now take a notebook and a pen. Follow these

steps, writing down your ideas, plans, and search results--and follow

those that will push you to success through the programming

languages they communicated with.
